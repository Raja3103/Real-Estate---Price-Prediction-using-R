Real_Est= read.csv(r'(D:\Raja\R\Project 1 Real Estate.housing_train.csv)', sep = ',', stringsAsFactors = F)
Real_Est= read.csv(r'(D:\Raja\R\Project 1 Real Estate\housing_train.csv)', sep = ',', stringsAsFactors = F)
Real_Est
view(Real_Est)
View(Real_Est)
dim(Real_Est)
summary(Real_Est)
summary(Real_Est)
library(tidymodels)
library(visdat)
library(tidyr)
library(car)
house_train= read.csv(r'(D:\Raja\R\Project 1 Real Estate\housing_train.csv)',  sep = ',', stringsAsFactors = F)
house_test= read.csv(r'(D:\Raja\R\Project 1 Real Estate\housing_test.csv)',  sep = ',', stringsAsFactors = F)
House = house_train
House_t= house_test
## discuss data
names(House)
names(House_t)
## Target Variable
setdiff(names(House), names(House_t))
## over view of data
head(House)
summary(House)
dim(House)
# replacing NA's
House$Bathroom[is.na(House$Bathroom)] = round(mean(House$Bathroom, na.rm = T),0)
House$Bedroom2[is.na(House$Bedroom2)] = round(mean(House$Bedroom2, na.rm = T),0)
House$Car[is.na(House$Car)] = round(mean(House$Car, na.rm = T),0)
House$Landsize[is.na(House$Landsize)] = mean(House$Landsize, na.rm = T)
House$BuildingArea[is.na(House$BuildingArea)]=round(mean(House$BuildingArea, na.rm = T),1)
View(House)
## over view of data
head(House)
dim(House)
unique(House$Suburb)
cor.test(House$Rooms, House$Bedroom2)
## checking relation ship between variables
cor.test(House$Bathroom, House$Car)
## checking relation ship between variables
cor.test(House$Bedroom2, House$Rooms)
unique(House$Suburb)
mtcars[1:5,]
mtcars[mtcars$mpg, desc]
mtcars[1:5,]
mtcars[mtcars[1:5,],desc(mtcars$mpg)]
mtcars[1:5,],desc(mtcars$mpg)
mtcars[1:5,]
unique(House$CouncilArea)
## over view of data
head(House)
recipe(Price ~ . ,data=House)
cor.test(House$BuildingArea, House$Landsize)
## checking relation ship between variables
cor.test(House$Bedroom2, House$Rooms)
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Address,Postcode,Bedroom2,YearBuilt, new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(suburb,Type,Method,Sellerg,CouncilArea ,new_role = 'to_dummy') %>%
step_rm(has_role('drop_vars')) %>%
step_rm(has_role('drop_vars')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
House$Suburb
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Address,Postcode,Bedroom2,YearBuilt, new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(suburb,Type,Method,Sellerg,CouncilArea ,new_role = 'to_dummy') %>%
step_rm(has_role('drop_vars')) %>%
step_rm(has_role('drop_vars')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
House$Suburb
House$Suburb
table(House$Suburb)
prop.table(table(House$Suburb))*100
arrange(prop.table(table(House$Suburb))*100, desc)
arrange(prop.table(table(House$Suburb))*100)
prop.table(table(House$Suburb))*100
unique(House$Suburb)
unique(House$Postcode)
count(unique(House$Suburb))
prop.table(table(House$Postcode))*100
prop.table(table(House$Postcode))*100 >1
count(prop.table(table(House$Postcode))*100 >1)
prop.table(prop.table(table(House$Postcode))*100 >1)
prop.table(table(House$Postcode))*100 >1
prop.table(table(House$Postcode))*100
prop.table(table(House$Type))*100
prop.table(table(House$Method))*100
prop.table(table(House$SellerG))*100
prop.table(table(House$CouncilArea))*100
prop.table(table(House$Postcode))*100
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Address,Suburb,Bedroom2,YearBuilt,Sellerg,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_rm(has_role('drop_vars')) %>%
step_unknown(has_role('to_dummmy'), new_level = '__missing__') %>%
step_other(has_role('to_dummmy'), threshold = 0.009,other = '__other__') %>%
step_dummy(has_role('to_dummmy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
## over view of data
head(House)
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Address,Suburb,Bedroom2,YearBuilt,SellerG,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_rm(has_role('drop_vars')) %>%
step_unknown(has_role('to_dummmy'), new_level = '__missing__') %>%
step_other(has_role('to_dummmy'), threshold = 0.009,other = '__other__') %>%
step_dummy(has_role('to_dummmy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
train = bake(dp_pipe,new_data = NULL)
test = bake(dp_pipe,new_data = House_t)
median(House$Bathroom, na.rm = T)
mean(House$Bathroom, na.rm = T)
library(tidymodels)
library(visdat)
library(tidyr)
library(car)
house_train= read.csv(r'(D:\Raja\R\Project 1 Real Estate\housing_train.csv)',  sep = ',', stringsAsFactors = F)
house_test= read.csv(r'(D:\Raja\R\Project 1 Real Estate\housing_test.csv)',  sep = ',', stringsAsFactors = F)
House = house_train
House_t= house_test
## Target Variable
setdiff(names(House), names(House_t))
## checking relation ship between variables
cor.test(House$Bedroom2, House$Rooms)
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Address,Suburb,Bedroom2,YearBuilt,SellerG,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_rm(has_role('drop_vars')) %>%
step_unknown(has_role('to_dummmy'), new_level = '__missing__') %>%
step_other(has_role('to_dummmy'), threshold = 0.009,other = '__other__') %>%
step_dummy(has_role('to_dummmy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
train = bake(dp_pipe,new_data = NULL)
test =
view(head(train))
test = bake(dp_pipe, new_data = House_t)
train = bake(dp_pipe,new_data = NULL)
view(train)
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Address,Suburb,Bedroom2,YearBuilt,SellerG,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_rm(has_role('drop_vars')) %>%
step_unknown(has_role('to_dummy'), new_level = '__missing__') %>%
step_other(has_role('to_dummy'), threshold = 0.009,other = '__other__') %>%
step_dummy(has_role('to_dummy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
train = bake(dp_pipe,new_data = NULL)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
dp_pipe = prep(dp_pipe)
rlang::last_trace()
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Address,Suburb,Bedroom2,YearBuilt,SellerG,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_rm(has_role('drop_vars')) %>%
step_unknown(has_role('to_dummy'), new_level = '__missing__') %>%
step_other(has_role('to_dummy'), threshold = 0.009,other = '__other__') %>%
step_dummy(has_role('to_dummy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
names(House)
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Suburb,Address,Bedroom2,YearBuilt,SellerG,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_rm(has_role('drop_vars')) %>%
step_unknown(has_role('to_dummy'), new_level = '__missing__') %>%
step_other(has_role('to_dummy'), threshold = 0.009,other = '__other__') %>%
step_dummy(has_role('to_dummy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Suburb,Address,Bedroom2,YearBuilt,SellerG,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_unknown(has_role('to_dummy'), new_level = '__missing__') %>%
step_other(has_role('to_dummy'), threshold = 0.009,other = '__other__') %>%
step_rm(has_role('drop_vars')) %>%
step_dummy(has_role('to_dummy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Suburb,Address,Bedroom2,YearBuilt,SellerG,CouncilArea,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method ,new_role = 'to_dummy') %>%
step_unknown(has_role('to_dummy'), new_level = '__missing__') %>%
step_other(has_role('to_dummy'), threshold = 0.009,other = '__other__') %>%
step_rm(has_role('drop_vars')) %>%
step_dummy(has_role('to_dummy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
House$Postcode = as.character(House$Postcode)
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Suburb,Address,Bedroom2,YearBuilt,SellerG,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_unknown(has_role('to_dummy'), new_level = '__missing__') %>%
step_other(has_role('to_dummy'), threshold = 0.009,other = '__other__') %>%
step_rm(has_role('drop_vars')) %>%
step_dummy(has_role('to_dummy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
train = bake(dp_pipe,new_data = NULL)
test = bake(dp_pipe, new_data = House_t)
view(train)
House_t$Price = NA
dp_pipe= recipe(Price ~ . ,data=House) %>%
update_role(Suburb,Address,Bedroom2,YearBuilt,SellerG,new_role = 'drop_vars') %>%
update_role(Rooms,Price,Distance,Bathroom,Car,Landsize,BuildingArea, new_role = 'to_numeric') %>%
update_role(Postcode,Type,Method,CouncilArea ,new_role = 'to_dummy') %>%
step_unknown(has_role('to_dummy'), new_level = '__missing__') %>%
step_other(has_role('to_dummy'), threshold = 0.009,other = '__other__') %>%
step_rm(has_role('drop_vars')) %>%
step_dummy(has_role('to_dummy')) %>%
step_mutate_at(has_role('to_numeric'),fn=as.numeric) %>%
step_impute_median(all_numeric(),-all_outcomes())
dp_pipe = prep(dp_pipe)
train = bake(dp_pipe,new_data = NULL)
test = bake(dp_pipe, new_data = House_t)
